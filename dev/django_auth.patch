--- original_models.py	2016-02-03 21:43:11.230246829 +0100
+++ models.py	2016-02-03 21:43:42.669002699 +0100
@@ -302,19 +302,19 @@
 
 class PermissionsMixin(models.Model):
     """
     A mixin class that adds the fields and methods necessary to support
     Django's Group and Permission model using the ModelBackend.
     """
     is_superuser = models.BooleanField(_('superuser status'), default=False,
         help_text=_('Designates that this user has all permissions without '
                     'explicitly assigning them.'))
-    groups = models.ManyToManyField(Group, verbose_name=_('groups'),
+    groups = models.ManyToManyField('member.Team', verbose_name=_('groups'), through='member.TeamRole', 
         blank=True, help_text=_('The groups this user belongs to. A user will '
                                 'get all permissions granted to each of '
                                 'their groups.'),
         related_name="user_set", related_query_name="user")
     user_permissions = models.ManyToManyField(Permission,
         verbose_name=_('user permissions'), blank=True,
         help_text=_('Specific permissions for this user.'),
         related_name="user_set", related_query_name="user")
 
